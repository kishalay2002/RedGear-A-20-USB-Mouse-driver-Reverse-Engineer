import tkinter as tk
import usb.core
import usb.util
import time

VID = 0x18F8
PID = 0x0FC0


dev = usb.core.find(idVendor=VID, idProduct=PID)

data = [[] for _ in range(22)]
data[0] = [0x07, 0x10, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00]
data[1] = [0x07, 0x10, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00]
data[2] = [0x07, 0x10, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00]
data[3] = [0x07, 0x10, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00]
data[4] = [0x07, 0x10, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00]
data[5] = [0x07, 0x10, 0x08, 0x0B, 0x00, 0x00, 0x00, 0x00]
data[6] = [0x07, 0x10, 0x06, 0x0C, 0x00, 0x00, 0x00, 0x00]
# 3rd bit controls scroll/volume 0x00 for scroll 0x01 for volume
data[7] = [0x07, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
data[8] = [0x07, 0x13, 0x7F, 0x82, 0x00, 0x00, 0x00, 0x00]
data[9] = [0x07, 0x09, 0x42, 0x38, 0x3F, 0x00, 0x00, 0x00]
data[10] = [0x07, 0x14, 0x00, 0x0F, 0x3F, 0x00, 0x00, 0x00]
data[11] = [0x07, 0x09, 0x42, 0x59, 0x3F, 0x00, 0x00, 0x00]
data[12] = [0x07, 0x14, 0x2F, 0xF0, 0x3F, 0x00, 0x00, 0x00]
data[13] = [0x07, 0x09, 0x42, 0x6A, 0x3F, 0x00, 0x00, 0x00]
data[14] = [0x07, 0x14, 0x4F, 0x00, 0x3F, 0x00, 0x00, 0x00]
data[15] = [0x07, 0x09, 0x42, 0x9B, 0x3F, 0x00, 0x00, 0x00]
data[16] = [0x07, 0x14, 0x60, 0xFF, 0x3F, 0x00, 0x00, 0x00]
data[17] = [0x07, 0x09, 0x42, 0xDC, 0x3F, 0x00, 0x00, 0x00]
data[18] = [0x07, 0x14, 0x8F, 0x0F, 0x3F, 0x00, 0x00, 0x00]
data[19] = [0x07, 0x09, 0x42, 0xFD, 0x3F, 0x00, 0x00, 0x00]
data[20] = [0x07, 0x14, 0xA0, 0x00, 0x3F, 0x00, 0x00, 0x00]
data[21] = [0x07, 0x12, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00]


def fixed():
    data[8][3] = 0x82


def cyclic():
    data[8][3] = 0x92


def static():
    data[8][3] = 0x86


def off():
    data[8][3] = 0x87


def apply():
    try:
        if dev.is_kernel_driver_active(0):
            dev.detach_kernel_driver(0)
            # usb.util.claim_interface(dev, 0)

        for i in range(22):
            temp = dev.ctrl_transfer(
                0x21, 0x09, wValue=0x0307, wIndex=0, data_or_wLength=data[i]
            )
            # print(temp)
        if not dev.is_kernel_driver_active(0):
            dev.attach_kernel_driver(0)
    except usb.core.USBError as ex:
        # print(ex)
        dev.reset()

    finally:
        dev2 = usb.core.find(idVendor=VID, idProduct=PID)
        dev2.attach_kernel_driver(0)


# Create the main window
root = tk.Tk()
root.title("RedGear A-20 Mouse Driver")

# Create buttons and assign functions
button_fixed = tk.Button(root, text="Fixed", command=fixed)
button_cyclic = tk.Button(root, text="Cyclic", command=cyclic)
button_static = tk.Button(root, text="Static", command=static)
button_off = tk.Button(root, text="Off", command=off)
button_apply = tk.Button(root, text="Apply", command=apply)

# Arrange buttons in the window
button_fixed.grid(row=0, column=0, padx=20, pady=5)
button_cyclic.grid(row=0, column=1, padx=20, pady=5)
button_static.grid(row=0, column=2, padx=20, pady=5)
button_off.grid(row=0, column=3, padx=20, pady=5)
button_apply.grid(row=1, column=0, columnspan=4, padx=5, pady=5)


# Run the application
root.mainloop()
